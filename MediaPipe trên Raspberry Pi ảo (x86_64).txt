Khắc phục lỗi cài đặt MediaPipe trên Raspberry Pi ảo (x86_64)
Dựa trên hình ảnh bạn cung cấp, bạn đang gặp lỗi khi cố gắng cài đặt MediaPipe trong môi trường ảo Raspberry Pi với kiến trúc x86_64 (Debian 11 Bullseye). Các lệnh bạn đã thử (pip install mediapipe==0.10.21, pip install mediapipe==0.10.7, pip install mediapipe --pre) đều thất bại với thông báo:
textERROR: Could not find a version that satisfies the requirement mediapipe
ERROR: No matching distribution found for mediapipe
Phân tích nguyên nhân

Kiến trúc và hệ điều hành:

Bạn đang dùng x86_64 (xác nhận từ uname -m trước đó), nhưng MediaPipe wheel trên PyPI (https://pypi.org) và PiWheels (https://www.piwheels.org) có thể không có sẵn cho phiên bản cụ thể hoặc có vấn đề với chỉ mục.
Debian 11 Bullseye hỗ trợ Python 3.9, nhưng MediaPipe 0.10.21 (phát hành 06/02/2025) có thể yêu cầu cập nhật hoặc build tùy chỉnh.


PiWheels:

PiWheels cung cấp wheel cho ARM (Raspberry Pi bản địa), không phải x86_64. Vì vậy, việc sử dụng https://www.piwheels.org/simple không phù hợp trong môi trường ảo x86_64.


Phiên bản Python:

Kiểm tra phiên bản Python hiện tại: python3 --version. Nếu là 3.9 (mặc định trên Bullseye), nó tương thích, nhưng cần đảm bảo pip khớp.



Giải pháp chi tiết
Bước 1: Xác nhận phiên bản Python và pip
Chạy:
textpython3 --version
pip3 --version

Nếu Python là 3.9.x và pip không khớp (ví dụ: pip 20.3.4), nâng cấp pip:
textpython3 -m pip install --upgrade pip


Bước 2: Cài đặt dependencies
Đảm bảo các thư viện cần thiết:
textsudo apt update
sudo apt install -y python3-dev python3-pip python3-venv build-essential cmake pkg-config libprotobuf-dev protobuf-compiler
Bước 3: Tạo và kích hoạt môi trường ảo
textpython3 -m venv mediapipe_env
source mediapipe_env/bin/activate
Bước 4: Cài MediaPipe từ PyPI (x86_64)
Thử lại với chỉ mục PyPI chính:
textpip install mediapipe==0.10.21

Nếu thất bại, thử phiên bản cũ hơn:
textpip install mediapipe==0.10.7

Hoặc bản pre-release:
textpip install mediapipe --pre


Bước 5: Nếu vẫn lỗi, build từ nguồn
Vì wheel x86_64 có thể không có sẵn hoặc không tương thích, build từ nguồn:

Tải nguồn:
textgit clone https://github.com/google/mediapipe.git
cd mediapipe

Checkout phiên bản cụ thể:
textgit checkout v0.10.21

Sửa lỗi phiên bản "dev" (nếu cần):

Kiểm tra setup.py:
textnano setup.py

Nếu thấy version="dev", thay bằng "0.10.21" hoặc comment dòng đó và thêm version="0.10.21" thủ công.
Lưu và thoát (Ctrl+O, Enter, Ctrl+X).


Build wheel:
textpython setup.py bdist_wheel --plat-name linux_x86_64

Thời gian: 10-20 phút tùy CPU ảo.


Cài wheel:
textpip install dist/mediapipe-*.whl


Bước 6: Cài các thư viện còn lại
textpip install opencv-python gtts pygame
Bước 7: Chạy script

Kích hoạt env: source mediapipe_env/bin/activate.
Chạy:
textpython greeting_robot_final.py


Khắc phục sự cố chi tiết

Lỗi "No matching distribution":

Xóa cache pip: pip cache purge.
Sử dụng chỉ mục PyPI trực tiếp: pip install mediapipe==0.10.21 -i https://pypi.org/simple.


Lỗi build (gcc failed):

Cài thêm: sudo apt install g++.
Tăng swap: sudo nano /etc/dphys-swapfile, đổi CONF_SWAPSIZE=100 thành 1024, rồi sudo dphys-swapfile setup && sudo dphys-swapfile swapon.


Webcam không nhận:

Kiểm tra VirtualBox USB settings (thêm filter webcam).
Chạy ls /dev/video* để xác nhận /dev/video1.


Phiên bản Python không khớp:

Nếu Python 3.9 không hoạt động, thử 3.7: python3.7 -m venv mediapipe_env (nếu có).



Script đã kiểm tra
textimport cv2
import mediapipe as mp
from gtts import gTTS
import pygame
import time
import os

mp_face_detection = mp.solutions.face_detection
mp_drawing = mp.solutions.drawing_utils
face_detection = mp_face_detection.FaceDetection(min_detection_confidence=0.5)

cap = cv2.VideoCapture(1)
if not cap.isOpened():
    print("Lỗi: Không thể mở webcam. Kiểm tra USB trong VirtualBox.")
    print("Kiểm tra: ls /dev/video*")
    exit()

cap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)

last_greet_time = 0
greet_interval = 5

def speak_greeting():
    try:
        text = "Xin chào! Rất vui được gặp bạn!"
        tts = gTTS(text=text, lang='vi')
        tts.save("greeting.mp3")
        pygame.mixer.init()
        pygame.mixer.music.load("greeting.mp3")
        pygame.mixer.music.play()
        while pygame.mixer.music.get_busy():
            time.sleep(0.1)
        pygame.mixer.quit()
        os.remove("greeting.mp3")
    except Exception as e:
        print(f"Lỗi âm thanh: {e}")

try:
    print("Chương trình chạy. Đặt khuôn mặt trước webcam...")
    while True:
        ret, frame = cap.read()
        if not ret:
            print("Lỗi đọc webcam")
            break
        rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
        results = face_detection.process(rgb_frame)
        if results.detections:
            for detection in results.detections:
                mp_drawing.draw_detection(frame, detection)
                print("Phát hiện khuôn mặt! Đang chào...")
                current_time = time.time()
                if (current_time - last_greet_time) > greet_interval:
                    speak_greeting()
                    last_greet_time = current_time
        cv2.imshow('Webcam - Greeting Robot', frame)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break
except KeyboardInterrupt:
    print("Dừng bởi Ctrl+C")

cap.release()
cv2.destroyAllWindows()
print("Chương trình kết thúc.")
Lưu ý

Môi trường ảo x86_64 không giống Raspberry Pi ARM, nhưng script vẫn chạy nếu webcam được cấu hình đúng.
Báo lại lỗi nếu có để tôi hỗ trợ thêm!