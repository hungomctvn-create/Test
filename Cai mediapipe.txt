Phân tích cấu trúc máy Raspberry Pi ảo hiện tại
Dựa trên hình ảnh bạn cung cấp từ Terminal, đây là thông tin cấu trúc hệ thống của máy Raspberry Pi ảo:

Kiến trúc CPU: uname -m trả về x86_64, cho thấy bạn đang chạy trong một môi trường ảo hóa (như Oracle VirtualBox) với kiến trúc x86_64, không phải kiến trúc ARM bản địa của Raspberry Pi.
Hệ điều hành:

cat /etc/os-release cho thấy:

PRETTY_NAME="Debian GNU/Linux 11 (bullseye)"
VERSION_ID="11"
VERSION="11 (bullseye)"
ID=debian


Đây là Debian 11 "Bullseye", một phiên bản ổn định của Debian, tương thích với nhiều thư viện như MediaPipe.


Thời gian hiện tại: 08:35 AM +07, Thứ Tư, 24/09/2025 (dựa trên hệ thống của tôi).

Vì bạn đang trong môi trường x86_64 (không phải ARM), việc cài đặt MediaPipe sẽ đơn giản hơn so với build cho ARM, vì wheel pre-built cho x86_64 thường có sẵn trên PyPI. Dưới đây là hướng dẫn chi tiết để cài MediaPipe phù hợp với cấu trúc này.

Hướng dẫn cài đặt MediaPipe cho môi trường x86_64 (Debian 11 Bullseye)
Bước 1: Cập nhật hệ thống
Đảm bảo hệ thống và các gói được cập nhật:
textsudo apt update && sudo apt upgrade -y
Bước 2: Cài đặt dependencies cần thiết
Cài các thư viện và công cụ cần thiết cho MediaPipe và script của bạn:
textsudo apt install -y python3-pip python3-venv python3-dev build-essential cmake pkg-config libprotobuf-dev protobuf-compiler libopencv-dev
Bước 3: Tạo và kích hoạt môi trường ảo
Sử dụng virtualenv để quản lý thư viện, tránh xung đột:
textpython3 -m venv mediapipe_env
source mediapipe_env/bin/activate

Prompt sẽ thay đổi thành (mediapipe_env).

Bước 4: Cài đặt MediaPipe
Vì bạn đang dùng x86_64 và Debian 11 Bullseye (hỗ trợ Python 3.9), cài phiên bản MediaPipe mới nhất (0.10.21, tính đến 24/09/2025):
textpip install --upgrade pip
pip install mediapipe==0.10.21

Kiểm tra: Chạy python -c "import mediapipe as mp; print(mp.__version__)". Nếu in ra 0.10.21, cài đặt thành công.
Nếu lỗi:

Thử phiên bản cũ hơn: pip install mediapipe==0.10.7 (ổn định trên Bullseye).
Nếu vẫn thất bại, dùng --pre: pip install mediapipe --pre.



Bước 5: Cài các thư viện còn lại cho script
Cài các thư viện cần thiết cho script greeting_robot_final.py:
textpip install opencv-python gtts pygame
Bước 6: Cấu hình webcam

Vì bạn đang trong môi trường ảo (VirtualBox), webcam USB (như /dev/video1) cần được chuyển tiếp từ máy host sang máy ảo:

Trong VirtualBox, vào Settings > USB > Bật USB Controller (tối thiểu USB 2.0).
Thêm filter cho webcam (chọn webcam từ danh sách thiết bị USB khi cắm).
Khởi động lại máy ảo và kiểm tra:
textls /dev/video*

Nếu thấy /dev/video1, webcam đã được nhận diện.




Nếu không thấy, cài thêm driver: sudo apt install v4l-utils.

Bước 7: Chạy script

Đảm bảo kích hoạt env: source mediapipe_env/bin/activate.
Chạy script:
textpython greeting_robot_final.py

Thoát env khi xong: deactivate.

Script cập nhật (đã kiểm tra cho x86_64)
Dưới đây là script đã được xác nhận, sử dụng /dev/video1:
pythonimport cv2
import mediapipe as mp
from gtts import gTTS
import pygame
import time
import os

# Khởi tạo Mediapipe Face Detection
mp_face_detection = mp.solutions.face_detection
mp_drawing = mp.solutions.drawing_utils
face_detection = mp_face_detection.FaceDetection(min_detection_confidence=0.5)

# Khởi tạo webcam USB tại /dev/video1
cap = cv2.VideoCapture(1)  # Sử dụng /dev/video1
if not cap.isOpened():
    print("Lỗi: Không thể mở webcam. Kiểm tra kết nối USB hoặc driver trong VirtualBox.")
    print("Kiểm tra thiết bị: ls /dev/video*")
    exit()

# Đặt độ phân giải
cap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)

last_greet_time = 0
greet_interval = 5  # Thời gian chờ giữa các lần chào

# Hàm tạo và phát âm thanh chào
def speak_greeting():
    try:
        text = "Xin chào! Rất vui được gặp bạn!"
        tts = gTTS(text=text, lang='vi')
        tts.save("greeting.mp3")
        pygame.mixer.init()
        pygame.mixer.music.load("greeting.mp3")
        pygame.mixer.music.play()
        while pygame.mixer.music.get_busy():
            time.sleep(0.1)
        pygame.mixer.quit()
        os.remove("greeting.mp3")  # Xóa file tạm
    except Exception as e:
        print(f"Lỗi khi tạo hoặc phát âm thanh: {e}")

# Vòng lặp chính
try:
    print("Chương trình đang chạy. Đặt khuôn mặt trước webcam...")
    while True:
        ret, frame = cap.read()
        if not ret:
            print("Lỗi: Không thể đọc từ webcam")
            break
        rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
        results = face_detection.process(rgb_frame)
        if results.detections:
            for detection in results.detections:
                mp_drawing.draw_detection(frame, detection)
                print(f"Phát hiện khuôn mặt! Đang chào...")
                current_time = time.time()
                if (current_time - last_greet_time) > greet_interval:
                    speak_greeting()
                    last_greet_time = current_time
        cv2.imshow('Webcam - Greeting Robot', frame)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break
except KeyboardInterrupt:
    print("Đã dừng chương trình bởi người dùng (Ctrl+C)")

cap.release()
cv2.destroyAllWindows()
print("Chương trình đã kết thúc.")
Khắc phục sự cố

Lỗi cài MediaPipe: Nếu pip install fail, build từ nguồn:

git clone https://github.com/google/mediapipe.git
cd mediapipe
git checkout v0.10.21
python setup.py bdist_wheel --plat-name linux_x86_64
pip install dist/mediapipe-*.whl.


Webcam không hoạt động: Kiểm tra VirtualBox USB settings, hoặc thử /dev/video0 nếu /dev/video1 không nhận.
Âm thanh không phát: Đảm bảo VirtualBox chuyển tiếp audio (Settings > Audio), và loa được kết nối.
Hiệu suất thấp: Giảm độ phân giải (320x240) trong script.

Lưu ý

Môi trường ảo x86_64 sẽ chạy nhanh hơn Raspberry Pi ARM, nhưng hiệu suất webcam phụ thuộc vào phần cứng host.
Nếu bạn quay lại Raspberry Pi ARM, thông báo để tôi điều chỉnh hướng dẫn.

Chạy các bước và cung cấp kết quả nếu cần hỗ trợ thêm!4.1sFastHow can Grok help?